/**
 * 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。

每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？

示例 1：

输入：n = 2
输出：2
解释：有两种方法可以爬到楼顶。
1. 1 阶 + 1 阶
2. 2 阶
示例 2：

输入：n = 3
输出：3
解释：有三种方法可以爬到楼顶。
1. 1 阶 + 1 阶 + 1 阶
2. 1 阶 + 2 阶
3. 2 阶 + 1 阶
*/

/**
 * @param {number} n
 * @return {number}
 */

/**
 * 思路：
 * 1阶 1种方法
 * 2阶 2种方法
 * 3阶 3种方法
 * 4阶 5种方法 1+1+1+1 1+1+2 2+2 1+2+1 2+1+1
 * 5阶 8种方法
 * 得出结论 f(n) = f(n-1)+f(n-2)
 * 这是一个很明显的斐波拉契
 */
var climbStairs = function(n) {
    let sum, a = 0, b = 1
    for(let i = 0; i < n; i++) {
        sum = a+b
        a = b
        b = sum
    }
    return sum
};